<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seeker</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-11T13:49:26.338Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>一口同乐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何通过Hexo和Github搭建免费静态博客</title>
    <link href="http://yoursite.com/2017/05/07/How%20to%20build%20Blog/"/>
    <id>http://yoursite.com/2017/05/07/How to build Blog/</id>
    <published>2017-05-07T14:13:25.273Z</published>
    <updated>2017-05-11T13:49:26.338Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要介绍了如何了通过Hexo和Github搭建自己静态博客的详细操作步骤，内容主要针对<code>Windows</code>平台，<code>Github</code>和<code>Hexo3.0</code></p>
<a id="more"></a>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="为什么选用Github-Pages搭建静态博客"><a href="#为什么选用Github-Pages搭建静态博客" class="headerlink" title="为什么选用Github Pages搭建静态博客"></a>为什么选用Github Pages搭建静态博客</h3><h4 id="通过Github搭建博客的原理"><a href="#通过Github搭建博客的原理" class="headerlink" title="通过Github搭建博客的原理"></a>通过Github搭建博客的原理</h4><p>Github是一个具有版本管理功能的代码仓库，每个项目有一个主页，主页内会显示项目的源文件。</p>
<p>Github通过Pages功能，允许用户自定义项目首页，用来替代默认的源码列表。所以Github Pages可以被认为是用户编写的，托管在Github上的静态网页。用户通过Github提供的模板经过Hexo/Jekyll/Octopress程序再处理生成静态文件。</p>
<h4 id="通过Github搭建博客的优点"><a href="#通过Github搭建博客的优点" class="headerlink" title="通过Github搭建博客的优点"></a>通过Github搭建博客的优点</h4><ol>
<li><p>免费无限流量；</p>
</li>
<li><p>享受Git的版本管理功能；</p>
</li>
<li><p>直接通过Markdown编写文章，不需要通过编写前端页面。</p>
</li>
</ol>
<p>由于缺少数据库的关系，所以通过Github无法承载大型网站的开发，但对于搭建中小型的Blog可以完美胜任。</p>
<h3 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h3><p>Hexo是一个快速、简洁且高效的博客框架，其主要使用Markdown渲染引擎解析文章，在几秒内，即可利用其主题生成静态网页。</p>
<h4 id="选择Hexo还是Jekyll"><a href="#选择Hexo还是Jekyll" class="headerlink" title="选择Hexo还是Jekyll"></a>选择Hexo还是Jekyll</h4><p>相较于Jekyll，选择Hexo主要原因是：</p>
<ol>
<li>Jekyll没有本地服务器，无法实现本地博文预览功能，需要上传到WEB容器才能预览功能，而Hexo可以通过命令(Hexo s)实现本地的预览，并直接发布到WEB容器中实现同步（Hexo G）。</li>
<li>Hexo基于NodeJS实现，在Windows上安装NodeJS开发环境简单。</li>
<li>Hexo主题较多。</li>
</ol>
<h3 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h3><p><a href="https://windows.github.com/" target="_blank" rel="external">Github Windows</a></p>
<p><a href="https://desktop.github.com/" target="_blank" rel="external">Github Mac</a></p>
<h3 id="安装Node-JS"><a href="#安装Node-JS" class="headerlink" title="安装Node.JS"></a>安装Node.JS</h3><p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.JS</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>配置好<code>GitHub</code>家目录后，双击桌面上的<code>Git Shell</code>,输入<code>npm</code>命令即可安装</p>
<pre><code>npm install hexo-cli -g;
 npm install hexo --save;
#如果命令无法运行，可以尝试更换taobao的npm源
npm install -g cnpm --registry=https://registry.npm.taobao.org
</code></pre><h2 id="Hexo初始化配置"><a href="#Hexo初始化配置" class="headerlink" title="Hexo初始化配置"></a>Hexo初始化配置</h2><h3 id="创建Hexo文件夹"><a href="#创建Hexo文件夹" class="headerlink" title="创建Hexo文件夹"></a>创建Hexo文件夹</h3><p>安装完成后，根据自己喜好建立目录（如<code>C:\GitHub\hexo</code>），进入<code>Git Shell</code>切换到该路径下<code>C:\GitHub\hexo</code>执行以下指令</p>
<pre><code>hexo init

安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。
bash $ hexo init &lt;folder&gt;
bash $ cd &lt;folder&gt;
bash $ npm install

#新建完成后，指定文件夹的目录如下
.
├── _config.yml
├── package.json
├── scaffolds
├── scripts
├── source
|      ├── _drafts
|      └── _posts
└── themes
</code></pre><h3 id="安装Hexo插件"><a href="#安装Hexo插件" class="headerlink" title="安装Hexo插件"></a>安装Hexo插件</h3><pre><code>npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
</code></pre><h3 id="Hexo简写命令"><a href="#Hexo简写命令" class="headerlink" title="Hexo简写命令"></a>Hexo简写命令</h3><pre><code>hexo n #生成文章，或者source\_posts手动编辑
hexo s #本地发布预览效果
hexo g #生成public静态文件
</code></pre><h2 id="部署静态网页到GitHub"><a href="#部署静态网页到GitHub" class="headerlink" title="部署静态网页到GitHub"></a>部署静态网页到GitHub</h2><h3 id="注册设置GitHub"><a href="#注册设置GitHub" class="headerlink" title="注册设置GitHub"></a>注册设置GitHub</h3><p>1.登入<a href="https://github.com/" target="_blank" rel="external">GitHub</a>，注册</p>
<p>2.在主页右下角创建<code>New repository</code>,name必须和用户名一致如<code>ga021.github.io</code></p>
<p>3.随即即可访问静态主页如<a href="http://ga021.github.io/" target="_blank" rel="external">http://ga021.github.io/</a></p>
<h3 id="同步内容至GitHub"><a href="#同步内容至GitHub" class="headerlink" title="同步内容至GitHub"></a>同步内容至GitHub</h3><p>1.下载GitHub Windows</p>
<p>2.设置<code>Local path</code>如<code>C:\GitHub\</code></p>
<p>3.运行<code>Git Shell</code>切换到如<code>C:\GitHub\hexo</code>路径下</p>
<p>4.执行<code>hexo g</code>命令生成<code>public</code>文件夹</p>
<p>5.把生成的内容全部拷贝到<code>Local path</code>或其子目录</p>
<p>6.运行<code>GitHub</code>确认修改信息后执行右上角的<code>Sync</code>同步</p>
<p>7.最后访问主页观察效果</p>
<p><a href="http://ga021.github.io/" target="_blank" rel="external">http://ga021.github.io/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文主要介绍了如何了通过Hexo和Github搭建自己静态博客的详细操作步骤，内容主要针对&lt;code&gt;Windows&lt;/code&gt;平台，&lt;code&gt;Github&lt;/code&gt;和&lt;code&gt;Hexo3.0&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="http://yoursite.com/categories/Others/"/>
    
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Git简介及其常用使用指令</title>
    <link href="http://yoursite.com/2016/12/22/Skills/"/>
    <id>http://yoursite.com/2016/12/22/Skills/</id>
    <published>2016-12-22T08:30:11.000Z</published>
    <updated>2017-05-07T14:17:15.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><p>Git简而言之是一个分布式版本控制软件，相对于传统的集中式管理，Git无需联网操作，安全性高（本地存在完整的版本库），以及强大的分支管理特点。</p>
<p>本文将介绍Git常用的使用流程及指令。</p>
<a id="more"></a>
<h2 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure>
<p>用于初始化Git可以管理的文件夹。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add</div></pre></td></tr></table></figure></p>
<p>用于添加需要Git管理的文件，将文件放入暂存区。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">""</span></div></pre></td></tr></table></figure></p>
<p>用于提交Git管理的文件至工作区，其中-m后面的””用于填写提交的备注，方便文件管理。</p>
<h3 id="版本时光机"><a href="#版本时光机" class="headerlink" title="版本时光机"></a>版本时光机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard commit_id//版本控制</div></pre></td></tr></table></figure>
<p>HEAD^上一个版本，HEAD~100 往上100个版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span>//查看提交历史，用于回退</div><div class="line">$ gti reflog//查看命令历史，用于回到未来</div></pre></td></tr></table></figure></p>
<h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch //查看分支</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch &lt;name&gt;//创建分支</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout &lt;name&gt; //切换分支</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b &lt;name&gt; //创建+切换分支</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git merge &lt;name&gt; //合并某分支到当前分支</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch <span class="_">-d</span> &lt;name&gt; //删除分支</div></pre></td></tr></table></figure>
<h2 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h2><p>###添加远程库<br>首先需要登入Github,点击右上角的”Create a new repo”按钮；<br>接着我们在本地的仓库下运行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote add orgin git@....</div></pre></td></tr></table></figure></p>
<p>下一步我们将本地内容推送到远程库上,其中git push命令是将当前分支master推送到远程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure></p>
<p>第一次推送完成后，我们以后操作只需要使用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin master</div></pre></td></tr></table></figure></p>
<h2 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h2><p>打开远程库，找到Clone地址，并在本地输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> git@github.com:....</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Git简介&quot;&gt;&lt;a href=&quot;#Git简介&quot; class=&quot;headerlink&quot; title=&quot;Git简介&quot;&gt;&lt;/a&gt;Git简介&lt;/h2&gt;&lt;p&gt;Git简而言之是一个分布式版本控制软件，相对于传统的集中式管理，Git无需联网操作，安全性高（本地存在完整的版本库），以及强大的分支管理特点。&lt;/p&gt;
&lt;p&gt;本文将介绍Git常用的使用流程及指令。&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>彩云之南</title>
    <link href="http://yoursite.com/2016/12/22/third/"/>
    <id>http://yoursite.com/2016/12/22/third/</id>
    <published>2016-12-22T02:20:40.000Z</published>
    <updated>2016-12-22T08:26:24.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Photos"><a href="#Photos" class="headerlink" title="Photos"></a>Photos</h2><a id="more"></a>
<p><img src="https://cl.ly/1f3o0Z3J1j1t/IMG_3728.JPG" alt=""></p>
<p><img src="https://cl.ly/3m0A162x1Q2k/IMG_3997(20161221-082301" alt="">.jpg)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Photos&quot;&gt;&lt;a href=&quot;#Photos&quot; class=&quot;headerlink&quot; title=&quot;Photos&quot;&gt;&lt;/a&gt;Photos&lt;/h2&gt;
    
    </summary>
    
      <category term="Photographing" scheme="http://yoursite.com/categories/Photographing/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo Basic Skills</title>
    <link href="http://yoursite.com/2016/12/16/hello-world/"/>
    <id>http://yoursite.com/2016/12/16/hello-world/</id>
    <published>2016-12-16T03:54:46.569Z</published>
    <updated>2017-05-10T02:17:35.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
      <category term="Testing" scheme="http://yoursite.com/categories/Testing/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
